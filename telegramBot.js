const TelegramBot = require('node-telegram-bot-api');
const fs = require('fs');
const path = require('path');
require('dotenv').config();

// ==============================================
// –ù–ê–°–¢–†–û–ô–ö–ò –ò –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø
// ==============================================

if (!process.env.TELEGRAM_BOT_TOKEN) {
  throw new Error('–¢—Ä–µ–±—É–µ—Ç—Å—è TELEGRAM_BOT_TOKEN –≤ .env');
}

const bot = new TelegramBot(process.env.TELEGRAM_BOT_TOKEN);
const ADMIN_PASSWORD = process.env.ADMIN_PASSWORD || 'admin123';
const ADMINS_FILE = path.join(__dirname, 'admins.json');

// ==============================================
// –£–ü–†–ê–í–õ–ï–ù–ò–ï –ê–î–ú–ò–ù–ê–ú–ò
// ==============================================

let activeAdmins = loadAdmins();

function loadAdmins() {
  try {
    if (fs.existsSync(ADMINS_FILE)) {
      const data = fs.readFileSync(ADMINS_FILE, 'utf8');
      return new Set(JSON.parse(data));
    }
  } catch (err) {
    console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ admins.json:', err);
  }
  return new Set();
}

function saveAdmins() {
  try {
    fs.writeFileSync(ADMINS_FILE, JSON.stringify([...activeAdmins]));
    console.log(`–ê–¥–º–∏–Ω—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã (${activeAdmins.size})`);
  } catch (err) {
    console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è admins.json:', err);
  }
}

// ==============================================
// –ù–ê–°–¢–†–û–ô–ö–ê –ò–ù–¢–ï–†–§–ï–ô–°–ê –ë–û–¢–ê
// ==============================================

function setupBotMenu() {
  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
  bot.setMyCommands([
    { command: '/start', description: '–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞' },
    { command: '/admins', description: '–°–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∞–¥–º–∏–Ω–æ–≤' },
    { command: '/logout', description: '–í—ã–π—Ç–∏ –∏–∑ –∞–¥–º–∏–Ω–∫–∏' }
  ]);

  // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–æ—á–Ω–æ–µ –º–µ–Ω—é –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –±–æ—Ç–∞
  bot.setChatMenuButton({
    menu_button: {
      type: 'commands'
    }
  }).catch(err => console.error('–û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –º–µ–Ω—é:', err));
}

// ==============================================
// –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –ö–û–ú–ê–ù–î –° –î–û–ë–ê–í–õ–ï–ù–ò–ï–ú –ú–ï–ù–Æ
// ==============================================

// –°—Ç–∞—Ä—Ç–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞
bot.onText(/\/start/, (msg) => {
  const chatId = msg.chat.id;
  
  if (activeAdmins.has(chatId)) {
    return bot.sendMessage(
      chatId,
      `üëã –í—ã —É–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã!\n\n` +
      `–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /admins –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤\n` +
      `/logout –¥–ª—è –≤—ã—Ö–æ–¥–∞ –∏–∑ —Å–∏—Å—Ç–µ–º—ã`,
      {
        reply_markup: {
          keyboard: [
            [{ text: '/admins' }],
            [{ text: '/logout' }]
          ],
          resize_keyboard: true,
          one_time_keyboard: false
        }
      }
    );
  }
  
  bot.sendMessage(
    chatId, 
    'üîê –í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:',
    {
      reply_markup: {
        remove_keyboard: true // –£–±–∏—Ä–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö
      }
    }
  );
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π (–ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–æ–ª—è)
bot.on('message', (msg) => {
  if (msg.text?.startsWith('/')) return;
  
  const chatId = msg.chat.id;
  
  if (msg.text === ADMIN_PASSWORD) {
    activeAdmins.add(chatId);
    saveAdmins();
    
    bot.sendMessage(
      chatId,
      '‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã!\n\n' +
      '–¢–µ–ø–µ—Ä—å –≤—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –∑–∞–∫–∞–∑–∞—Ö.\n' +
      '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é –≤–Ω–∏–∑—É –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–æ–º–∞–Ω–¥–∞–º.',
      {
        reply_markup: {
          keyboard: [
            [{ text: '/admins' }],
            [{ text: '/logout' }]
          ],
          resize_keyboard: true,
          one_time_keyboard: false
        }
      }
    );
  } else if (!activeAdmins.has(chatId)) {
    bot.sendMessage(chatId, '‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.');
  }
});

// –°–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∞–¥–º–∏–Ω–æ–≤ (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
bot.onText(/\/admins/, (msg) => {
  const chatId = msg.chat.id;
  
  if (!activeAdmins.has(chatId)) {
    return bot.sendMessage(chatId, '‚ùå –î–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º!');
  }
  
  if (activeAdmins.size === 0) {
    return bot.sendMessage(chatId, '‚ÑπÔ∏è –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤');
  }
  
  let message = `üë• –ê–∫—Ç–∏–≤–Ω—ã–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã (${activeAdmins.size}):\n`;
  activeAdmins.forEach(adminId => {
    message += `‚Äî ID: ${adminId}\n`;
  });
  
  bot.sendMessage(chatId, message);
});

// –í—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
bot.onText(/\/logout/, (msg) => {
  const chatId = msg.chat.id;
  
  if (!activeAdmins.has(chatId)) {
    return bot.sendMessage(chatId, '‚ÑπÔ∏è –í—ã –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã');
  }
  
  activeAdmins.delete(chatId);
  saveAdmins();
  bot.sendMessage(
    chatId, 
    'üö™ –í—ã –≤—ã—à–ª–∏ –∏–∑ —Å–∏—Å—Ç–µ–º—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞',
    {
      reply_markup: {
        remove_keyboard: true // –£–±–∏—Ä–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø–æ—Å–ª–µ –≤—ã—Ö–æ–¥–∞
      }
    }
  );
});

// ==============================================
// –°–ò–°–¢–ï–ú–ê –£–í–ï–î–û–ú–õ–ï–ù–ò–ô –û –ó–ê–ö–ê–ó–ê–• (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
// ==============================================

async function sendOrderNotification(orderData) {
  if (activeAdmins.size === 0) {
    console.warn('–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∞–¥–º–∏–Ω–æ–≤ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è!');
    return false;
  }

  try {
    const orderId = `ORD-${Date.now().toString().slice(-6)}`;
    const orderDate = new Date().toLocaleString('ru-RU');
    
    let message = `üõí *–ù–û–í–´–ô –ó–ê–ö–ê–ó #${orderId}* [${orderDate}]\n`;
    message += '‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n';
    message += `üë§ *–ö–ª–∏–µ–Ω—Ç:* ${orderData.firstName} ${orderData.lastName}\n`;
    message += `üì± *–¢–µ–ª–µ—Ñ–æ–Ω:* \`${orderData.phone}\`\n`;
    message += `üè† *–ê–¥—Ä–µ—Å:* ${orderData.address}\n\n`;
    message += 'üì¶ *–°–æ—Å—Ç–∞–≤ –∑–∞–∫–∞–∑–∞:*\n';
    
    orderData.basket.forEach(item => {
      message += `‚ñ´Ô∏è ${item.title} - ${item.quantity} √ó ${item.price}‚ÇΩ = *${item.quantity * item.price}‚ÇΩ*\n`;
    });
    
    message += `\nüí∞ *–ò–¢–û–ì–û: ${orderData.totalAmount}‚ÇΩ*`;

    const options = {
      parse_mode: 'Markdown',
      reply_markup: {
        inline_keyboard: [
          [{
            text: '‚úÖ –ó–∞–∫–∞–∑ –≤—ã–ø–æ–ª–Ω–µ–Ω',
            callback_data: `complete:${orderId}`
          }]
        ]
      }
    };

    const sendPromises = Array.from(activeAdmins).map(chatId => {
      return bot.sendMessage(chatId, message, options)
        .catch(err => console.error(`–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–ª—è —á–∞—Ç–∞ ${chatId}:`, err));
    });

    await Promise.all(sendPromises);
    return true;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:', error);
    return false;
  }
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–æ–∫ (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
bot.on('callback_query', async (callbackQuery) => {
  try {
    const [action, orderId] = callbackQuery.data.split(':');
    const msg = callbackQuery.message;

    if (action === 'complete') {
      await bot.editMessageText(`‚úÖ –í–´–ü–û–õ–ù–ï–ù–û #${orderId}\n${msg.text}`, {
        chat_id: msg.chat.id,
        message_id: msg.message_id,
        parse_mode: 'Markdown'
      });
      await bot.answerCallbackQuery(callbackQuery.id, { text: '–ó–∞–∫–∞–∑ –≤—ã–ø–æ–ª–Ω–µ–Ω' });
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ callback:', error);
  }
});

// ==============================================
// –ó–ê–ü–£–°–ö –ë–û–¢–ê
// ==============================================

setupBotMenu();

if (!process.env.WEBHOOK_URL) {
  bot.startPolling().then(() => {
    console.log(`ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –ê–∫—Ç–∏–≤–Ω—ã—Ö –∞–¥–º–∏–Ω–æ–≤: ${activeAdmins.size}`);
    if (activeAdmins.size === 0) {
      console.warn('‚ö†Ô∏è –ù–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤!');
    }
  }).catch(err => {
    console.error('–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞:', err);
    process.exit(1);
  });
}

module.exports = { sendOrderNotification, bot };